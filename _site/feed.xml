<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-12-19T22:01:53+00:00</updated><id>http://localhost:4000/</id><title type="html">the Blog</title><subtitle>Better than talking to myself!</subtitle><entry><title type="html">Terraform External Provider - Python</title><link href="http://localhost:4000/terraform/python/2017/12/17/external-provider-terraform.html" rel="alternate" type="text/html" title="Terraform External Provider - Python" /><published>2017-12-18T04:16:00+00:00</published><updated>2017-12-18T04:16:00+00:00</updated><id>http://localhost:4000/terraform/python/2017/12/17/external-provider-terraform</id><content type="html" xml:base="http://localhost:4000/terraform/python/2017/12/17/external-provider-terraform.html">&lt;p&gt;Using an ‘External Provider’ in Terraform is pretty simple but there are specific requirements for the scripts processing the JSON query data. The documentation on hashicorp.io does specify state a bash shell example but nothing for Python. Below is an example for Python using the same premise but leveraging ‘json’ Python module to robustly transform the JSON data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.terraform.io/docs/providers/external/data_source.html&quot;&gt;Terraform External Data Provider&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The terraform external data provider passes JSON query data into the executed script via STDIN and expects a JSON formatted response back from STDOUT.&lt;/p&gt;

&lt;p&gt;Example JSON input:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;data&quot;: &quot;Test123&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example Provider:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;data &lt;span class=&quot;s2&quot;&gt;&quot;external&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;external_resource&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  program &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;python&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.module&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/python_script.py&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  query &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Test123&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Example Script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Script to test the external data provider in Terraform&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;jsondata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;jsondata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new-data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Test123&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsondata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Go &lt;a href=&quot;https://github.com/paulbrice/aws/tree/master/terraform/external_provider&quot;&gt;here&lt;/a&gt; to pull down the module.&lt;/p&gt;

&lt;p&gt;In the directory for the module run the below to prepare the module for execution; ‘init’, ‘plan’ and then ‘apply’.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Tue Dec 19 16:05:18$ terraform init
...
Tue Dec 19 16:05:18$ terraform plan
...
Tue Dec 19 16:05:18$ terraform apply
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The end result should be your altered JSON data returned as an output resource.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Tue Dec 19 16:05:18$ terraform apply

data.external.external_resource: Refreshing state...

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

external_result = {
  data = Test123
  new-data = Test123
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above example stores the JSON input from STDIN and then uses the Python ‘json’ module to translate from string to JSON in a robust way. The JSON object is apended with the new data and sent back to Terraform by ‘stringyfying’ it and writing to STDOUT. This can be used to perform any external processing as part of a Terraform module.&lt;/p&gt;

&lt;p&gt;Hope it helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights&lt;/p&gt;</content><author><name></name></author><summary type="html">Using an ‘External Provider’ in Terraform is pretty simple but there are specific requirements for the scripts processing the JSON query data. The documentation on hashicorp.io does specify state a bash shell example but nothing for Python. Below is an example for Python using the same premise but leveraging ‘json’ Python module to robustly transform the JSON data.</summary></entry><entry><title type="html">VPC Flow Logs – Optimized</title><link href="http://localhost:4000/aws/vpcflowlogs/2017/12/10/vpcflowlogs.html" rel="alternate" type="text/html" title="VPC Flow Logs – Optimized" /><published>2017-12-11T05:40:33+00:00</published><updated>2017-12-11T05:40:33+00:00</updated><id>http://localhost:4000/aws/vpcflowlogs/2017/12/10/vpcflowlogs</id><content type="html" xml:base="http://localhost:4000/aws/vpcflowlogs/2017/12/10/vpcflowlogs.html">&lt;p&gt;Here are some great articles on enhancing your VPC Flow Logs with security group information and centralizing your logs for secure analysis in a dedicated account.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/security/tag/vpc-flow-logs/&quot;&gt;Enhanced VPC FlowLogs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">Here are some great articles on enhancing your VPC Flow Logs with security group information and centralizing your logs for secure analysis in a dedicated account.</summary></entry><entry><title type="html">AWS - Get the latest Windows AMI’s</title><link href="http://localhost:4000/aws/2017/06/30/find-the-latest-windows-ami.html" rel="alternate" type="text/html" title="AWS - Get the latest Windows AMI's" /><published>2017-07-01T04:00:34+01:00</published><updated>2017-07-01T04:00:34+01:00</updated><id>http://localhost:4000/aws/2017/06/30/find-the-latest-windows-ami</id><content type="html" xml:base="http://localhost:4000/aws/2017/06/30/find-the-latest-windows-ami.html">&lt;p&gt;The fastest way to get a list of available AMI’s in AWS is to use the AWS CLI.
If you have not used it yet go &lt;a href=&quot;https://aws.amazon.com/documentation/cli/&quot;&gt;here&lt;/a&gt; and learn it!&lt;/p&gt;

&lt;p&gt;For this we use the ‘ec2 describe-images’ base command;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;aws ec2 describe-images &lt;span class=&quot;nt&quot;&gt;--owners&lt;/span&gt; amazon &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--filters&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root-device-type,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ebs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;architecture,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;name,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Windows_Server-2012-R2_RTM-English&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Base&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That gets us is a huge list of all Windows 2012 R2 AMI’s.
What we need to do is filter, that is easy using JMESPath.
…lets filter the return by selecting just the Name, ImageId and CreatedDate.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;aws ec2 describe-images &lt;span class=&quot;nt&quot;&gt;--owners&lt;/span&gt; amazon &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--filters&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root-device-type,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ebs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;architecture,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;name,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Windows_Server-2012-R2_RTM-English&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Base&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Images[].{ID:ImageId,Name:Name,Created:CreationDate}'&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So better but still a lot of AMI’s to look through.
Lets filter by CreationDate, get all AMI’s created after May-01 2017.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;aws ec2 describe-images &lt;span class=&quot;nt&quot;&gt;--owners&lt;/span&gt; amazon &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--filters&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root-device-type,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ebs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;architecture,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;name,Values&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Windows_Server-2012-R2_RTM-English&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Base&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So now we have a better list!
As you can see AWS CLI and JMESPath for the win!&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">The fastest way to get a list of available AMI’s in AWS is to use the AWS CLI. If you have not used it yet go here and learn it!</summary></entry><entry><title type="html">Microsoft SMA - Exporting Samples</title><link href="http://localhost:4000/powershell/sma/2015/12/14/microsoft-sma-exporting-samples.html" rel="alternate" type="text/html" title="Microsoft SMA - Exporting Samples" /><published>2015-12-15T05:05:00+00:00</published><updated>2015-12-15T05:05:00+00:00</updated><id>http://localhost:4000/powershell/sma/2015/12/14/microsoft-sma-exporting-samples</id><content type="html" xml:base="http://localhost:4000/powershell/sma/2015/12/14/microsoft-sma-exporting-samples.html">&lt;p&gt;Running an SMA instance without the ‘Azure Pack’ makes using SMA is a bit more, interesting!&lt;/p&gt;

&lt;p&gt;After looking around i saw that there were several “Sample-“ runbooks already built for us in SMA, most of these focused on integrations with other systems.&lt;/p&gt;

&lt;p&gt;Runbook Names&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sample-Using-VMCloud-Automation&lt;/li&gt;
  &lt;li&gt;Sample-Using-Activities&lt;/li&gt;
  &lt;li&gt;Sample-Managing-WebSiteCloud&lt;/li&gt;
  &lt;li&gt;Sample-Using-Variables&lt;/li&gt;
  &lt;li&gt;Sample-Managing-Orchestrator&lt;/li&gt;
  &lt;li&gt;Sample-Managing-VirtualMachineManager&lt;/li&gt;
  &lt;li&gt;Sample-Using-Credentials&lt;/li&gt;
  &lt;li&gt;Sample-Using-SuspendWorkflow&lt;/li&gt;
  &lt;li&gt;Sample-Managing-MySqlServers&lt;/li&gt;
  &lt;li&gt;Sample-Managing-ConfigurationManager&lt;/li&gt;
  &lt;li&gt;Sample-Using-Modules&lt;/li&gt;
  &lt;li&gt;Sample-Using-Connections&lt;/li&gt;
  &lt;li&gt;Sample-Using-Runbooks&lt;/li&gt;
  &lt;li&gt;Sample-Managing-OperationsManager&lt;/li&gt;
  &lt;li&gt;Sample-Managing-Plans&lt;/li&gt;
  &lt;li&gt;Sample-Managing-UserAccounts&lt;/li&gt;
  &lt;li&gt;Sample-Managing-Azure&lt;/li&gt;
  &lt;li&gt;Sample-Deleting-VMCloud-Subscription&lt;/li&gt;
  &lt;li&gt;Sample-Modify-VMCloud-Subscription&lt;/li&gt;
  &lt;li&gt;Sample-Using-Checkpoints&lt;/li&gt;
  &lt;li&gt;Sample-Managing-VMClouds&lt;/li&gt;
  &lt;li&gt;Sample-Using-RunbookParameters&lt;/li&gt;
  &lt;li&gt;Sample-Managing-ServiceBusCloud&lt;/li&gt;
  &lt;li&gt;Sample-Managing-DataProtectionManager&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am looking at doing some integration in ‘SMA’ to ‘Configuration Manager 2012’ and I noticed there were sample Runbooks for ‘Configuration Manager’. Now without the Azure Pack’ viewing these Runbooks was a little more difecult, as you have to understand the states a Runbook can be in (Published, Draft etc..) to be able to view it.
I wrote this quick script to export the “Sample-“ Runbooks for better viewing.&lt;/p&gt;

&lt;p&gt;Note: the destination directory must exist. D:\SMA\Runbooks\Samples\&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; @&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'WebServiceEndpoint'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://server.domain.com'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Port'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 9090&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$Runbooks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-SmaRunbook @parameters | &lt;span class=&quot;nb&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.RunbookName -like &lt;span class=&quot;s1&quot;&gt;'*Sample-*'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Select &lt;/span&gt;RunbookName
&lt;span class=&quot;nv&quot;&gt;$Runbooks&lt;/span&gt; | %&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$scriptPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &amp;amp;quot;D:\SMA\Runbooks\Samples\&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.RunbookName&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;.ps1&amp;amp;quot;; &lt;span class=&quot;nb&quot;&gt;Out-File&lt;/span&gt; -InputObject &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Get-SMARunbookDefinition @parameters -Name &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.RunbookName&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; -Type Draft&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.Content -FilePath &lt;span class=&quot;nv&quot;&gt;$scriptPath&lt;/span&gt; -Force&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">Running an SMA instance without the ‘Azure Pack’ makes using SMA is a bit more, interesting!</summary></entry><entry><title type="html">my AD account is locked!</title><link href="http://localhost:4000/powershell/2015/08/10/accountunlock.html" rel="alternate" type="text/html" title="my AD account is locked!" /><published>2015-08-11T06:40:33+01:00</published><updated>2015-08-11T06:40:33+01:00</updated><id>http://localhost:4000/powershell/2015/08/10/accountunlock</id><content type="html" xml:base="http://localhost:4000/powershell/2015/08/10/accountunlock.html">&lt;p&gt;AD account on timed lock?&lt;/p&gt;

&lt;p&gt;The other day I was waiting for my account to unlock, so I had a few minutes to kill so I decided to write a tool to pass the time.&lt;/p&gt;

&lt;p&gt;I wrote a script to tell me how long I had left to wait… pretty crude but I had fun.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;Function &lt;/span&gt;Get-LockoutRemainingTime
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Try&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$Account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-ADUser&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ID&lt;/span&gt; -Properties LockedOut,AccountLockoutTime
    &lt;span class=&quot;nv&quot;&gt;$Domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ADSI]&lt;span class=&quot;s2&quot;&gt;&quot;WinNT://&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:userdomain&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$UnlockInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Domain&lt;/span&gt;.AutoUnlockInterval
    &lt;span class=&quot;k&quot;&gt;If&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Account&lt;/span&gt;.LockedOut -eq &lt;span class=&quot;nv&quot;&gt;$TRUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; -BackgroundColor DarkRed &lt;span class=&quot;s2&quot;&gt;&quot;Account &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Account&lt;/span&gt;.Name&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is locked out!&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Int32]&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Account&lt;/span&gt;.AccountLockoutTime.AddSeconds&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1800&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | %&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;New-TimeSpan&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Get-Date&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;.TotalSeconds
      &lt;span class=&quot;k&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Account Unlocked in &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; seconds&quot;&lt;/span&gt;;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;--;start-sleep -s 1&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;While&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; -ne 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;Else&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; -BackgroundColor DarkGreen &lt;span class=&quot;s2&quot;&gt;&quot;Account &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Account&lt;/span&gt;.Name&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is not locked out!&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Catch&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Script Failure - &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.Exception.Message&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#End Function&lt;/span&gt;
 
Get-LockoutRemainingTime -ID &lt;span class=&quot;s2&quot;&gt;&quot;CN or DN&quot;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">AD account on timed lock?</summary></entry><entry><title type="html">Clearing “Invoke Web Services” Cache</title><link href="http://localhost:4000/scorch/2013/05/09/clearing-the-invoke-web-services-cache.html" rel="alternate" type="text/html" title="Clearing &quot;Invoke Web Services&quot; Cache" /><published>2013-05-09T12:23:41+01:00</published><updated>2013-05-09T12:23:41+01:00</updated><id>http://localhost:4000/scorch/2013/05/09/clearing-the-invoke-web-services-cache</id><content type="html" xml:base="http://localhost:4000/scorch/2013/05/09/clearing-the-invoke-web-services-cache.html">&lt;p&gt;I have had problems when working with a custom WSDL, when we change the WSDL Orchestrator “Invoke Web Services” activity does not see the changes. I have come across this multiple times so I thought I would document it. (for my memory if nothing else)
 Thankfully another person has already solved this, in this &lt;a href=&quot;http://sc.scomurr.com/orchestrator-2012-sp1-clear-the-cache-for-invoke-web-services/&quot;&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Orchestrator is caching the data returned by the WSDL in;&lt;/p&gt;

&lt;p&gt;C:\ProgramData\Microsoft System Center 2012\Orchestrator\Activities\WebServices2\&lt;/p&gt;

&lt;p&gt;So after reading the above article, I performed these steps.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Close Runbook Designer&lt;/li&gt;
  &lt;li&gt;Delete those newly created DLLs&lt;/li&gt;
  &lt;li&gt;Re-Open ‘Runbook Designer’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This worked for me, feel free to post replies about other experiences or solutions as this is a pain.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights&lt;/p&gt;</content><author><name></name></author><summary type="html">I have had problems when working with a custom WSDL, when we change the WSDL Orchestrator “Invoke Web Services” activity does not see the changes. I have come across this multiple times so I thought I would document it. (for my memory if nothing else) Thankfully another person has already solved this, in this blog post. Orchestrator is caching the data returned by the WSDL in;</summary></entry><entry><title type="html">Exchange 2010 - Validating Cluster Services</title><link href="http://localhost:4000/exchange2010/2012/12/05/exchange-2010-validating-cluster-services.html" rel="alternate" type="text/html" title="Exchange 2010 - Validating Cluster Services" /><published>2012-12-05T09:01:30+00:00</published><updated>2012-12-05T09:01:30+00:00</updated><id>http://localhost:4000/exchange2010/2012/12/05/exchange-2010-validating-cluster-services</id><content type="html" xml:base="http://localhost:4000/exchange2010/2012/12/05/exchange-2010-validating-cluster-services.html">&lt;p&gt;Understanding the state of the cluster service on your Exchange servers is a common need.&lt;/p&gt;

&lt;p&gt;There are many ways to acheive this but I do like to create a quick Powershell snipit to speed up my work and share with others.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;…this is especially handy in DR testing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: Run in a “Exchange Management Shell”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;Get-MailboxServer | %&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;GWMI&lt;/span&gt; -ComputerName &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.Name -Class Win32_Service | &lt;span class=&quot;se&quot;&gt;` &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.Name -eq &amp;amp;quot;ClusSvc&amp;amp;quot;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;` &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Select &lt;/span&gt;__Server,Name,StartMode,State&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will return all Exchange 2010 servers with a “Mailbox” role and the status of the “Cluster Service”.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;</content><author><name></name></author><summary type="html">Understanding the state of the cluster service on your Exchange servers is a common need.</summary></entry><entry><title type="html">Exchange 2010 Certificates - Assigned Services</title><link href="http://localhost:4000/exchange2010/powershell/2012/09/30/exchange-2010-certificates-assigned-services.html" rel="alternate" type="text/html" title="Exchange 2010 Certificates - Assigned Services" /><published>2012-10-01T04:58:00+01:00</published><updated>2012-10-01T04:58:00+01:00</updated><id>http://localhost:4000/exchange2010/powershell/2012/09/30/exchange-2010-certificates-assigned-services</id><content type="html" xml:base="http://localhost:4000/exchange2010/powershell/2012/09/30/exchange-2010-certificates-assigned-services.html">&lt;p&gt;Here is a PowerShell script to validate your installed server certificates for Exchange 2010 servers and the services that they have been bound to.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mailbox servers you can use -  Get-MailboxServer&lt;/li&gt;
  &lt;li&gt;Transport(HUB) servers you can use -  Get-TransportServer&lt;/li&gt;
  &lt;li&gt;Client Access(CAS) servers you can use -  Get-ClientAccessServer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The default input for the “Get-ExchangeCertificate” is the “-thumbprint” of the certificate so I had to write this little script.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$Servers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-MailboxServer 
&lt;span class=&quot;k&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Server&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
&lt;span class=&quot;nv&quot;&gt;$cert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-ExchangeCertificate -Server &lt;span class=&quot;nv&quot;&gt;$Server&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$cert&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Select&lt;/span&gt; @&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;amp;quot;Computer&amp;amp;quot;;E&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;,Services,Issuer,Thumbprint 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">Here is a PowerShell script to validate your installed server certificates for Exchange 2010 servers and the services that they have been bound to.</summary></entry><entry><title type="html">Exchange2010 - Rollup Update Version</title><link href="http://localhost:4000/powershell/2012/09/30/exchange-2010-finding-rollup-update-version.html" rel="alternate" type="text/html" title="Exchange2010 - Rollup Update Version" /><published>2012-10-01T04:55:00+01:00</published><updated>2012-10-01T04:55:00+01:00</updated><id>http://localhost:4000/powershell/2012/09/30/exchange-2010-finding-rollup-update-version</id><content type="html" xml:base="http://localhost:4000/powershell/2012/09/30/exchange-2010-finding-rollup-update-version.html">&lt;p&gt;After recently updating my lab to rollup update 4 for Exchange 2010 Sp2 I realized that the version information being display in the the EMC and EMS was not showing the recent update that I had performed. Luckly as usual there are plenty of articles out there explaining that Exchange 2007 and newer do not reflect updates in either the EMC or EMS.&lt;/p&gt;

&lt;p&gt;Solution: You have to look at the ExSetup.exe file metadata for correct update information.&lt;/p&gt;

&lt;p&gt;Ref: Exchange Team Blog Link: &lt;a href=&quot;http://blogs.technet.com/b/exchange/archive/2010/03/08/3409469.aspx&quot;&gt;Dude, Where’s My Rollup?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I wrote a quick script to get the information from the ExSetup.exe file from multiple servers.&lt;/p&gt;

&lt;p&gt;Run From E.M.S (Exchange Management Shell)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$Computers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-ExchangeServer | &lt;span class=&quot;nb&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.ServerRole -ne &lt;span class=&quot;s2&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Computers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$FullPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;\&quot;&lt;/span&gt; + &lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt;.Name + &lt;span class=&quot;s2&quot;&gt;&quot;\&quot;&lt;/span&gt; + &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt;.DataPath -Replace &lt;span class=&quot;s2&quot;&gt;&quot;Mailbox$&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;Bin&quot;&lt;/span&gt; -replace &lt;span class=&quot;s2&quot;&gt;&quot;:&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&quot;\ExSetup.exe&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$File&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-ChildItem&lt;/span&gt; -Path &lt;span class=&quot;nv&quot;&gt;$FullPath&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ExVer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;New-Object &lt;/span&gt;PSObject
&lt;span class=&quot;nb&quot;&gt;Add-Member&lt;/span&gt; -InputObject &lt;span class=&quot;nv&quot;&gt;$ExVer&lt;/span&gt; -MemberType NoteProperty -Name Computer -Value &lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt;.Name
&lt;span class=&quot;nb&quot;&gt;Add-Member&lt;/span&gt; -InputObject &lt;span class=&quot;nv&quot;&gt;$ExVer&lt;/span&gt; -MemberType NoteProperty -Name FileVersion -Value &lt;span class=&quot;nv&quot;&gt;$File&lt;/span&gt;.VersionInfo.FileVersion
&lt;span class=&quot;nb&quot;&gt;Add-Member&lt;/span&gt; -InputObject &lt;span class=&quot;nv&quot;&gt;$ExVer&lt;/span&gt; -MemberType NoteProperty -Name ProductVersion -Value &lt;span class=&quot;nv&quot;&gt;$File&lt;/span&gt;.VersionInfo.ProductVersion
&lt;span class=&quot;nv&quot;&gt;$ExAll&lt;/span&gt; +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ExVer&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ExAll&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;FT&lt;/span&gt; -AutoSize&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">After recently updating my lab to rollup update 4 for Exchange 2010 Sp2 I realized that the version information being display in the the EMC and EMS was not showing the recent update that I had performed. Luckly as usual there are plenty of articles out there explaining that Exchange 2007 and newer do not reflect updates in either the EMC or EMS.</summary></entry><entry><title type="html">Removing Non-Present Adapters</title><link href="http://localhost:4000/networking/2012/08/01/removing-non-present-adapters.html" rel="alternate" type="text/html" title="Removing Non-Present Adapters" /><published>2012-08-01T09:10:00+01:00</published><updated>2012-08-01T09:10:00+01:00</updated><id>http://localhost:4000/networking/2012/08/01/removing-non-present-adapters</id><content type="html" xml:base="http://localhost:4000/networking/2012/08/01/removing-non-present-adapters.html">&lt;p&gt;In my lab virtual machines after a migration from Hyper-V to VMware there are hardware network adapters that have been removed due to the migration with their network configurations remaining in the registry. Removing these have always been a pain, after a little searching I came across this Tech Net article for &lt;a href=&quot;http://support.microsoft.com/kb/315539/en-us&quot;&gt;Windows XP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I tried this in Windows 2008 R2 and it worked a treat.&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to All Programs , point to Accessories , and then click Command Prompt .&lt;/li&gt;
  &lt;li&gt;At a command prompt, type the following command prompt; set devmgr_show_nonpresent_devices=1&lt;/li&gt;
  &lt;li&gt;At a command prompt, type the following command a command prompt; start devmgmt.msc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Important: Select ‘show hidden devices’ on the View  menu in Device Manager before you can see devices that are not connected to the computer.&lt;/p&gt;

&lt;p&gt;When you finish troubleshooting, close Device Manager, type exit at the command prompt.&lt;/p&gt;

&lt;p&gt;Note that when you close the command prompt window, Window clears the devmgr_show_nonpresent_devices=1  variable that you set in step 2 and prevents ghosted devices from being displayed when you click ‘show hidden devices’.&lt;/p&gt;

&lt;p&gt;This worked very well and I was able to configure my new virtual NIC’s with no annoying alerts about duplicate registry profiles for network adapters.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;All information is provided on an AS-IS basis, with no  warranties and confers no rights.&lt;/p&gt;</content><author><name></name></author><summary type="html">In my lab virtual machines after a migration from Hyper-V to VMware there are hardware network adapters that have been removed due to the migration with their network configurations remaining in the registry. Removing these have always been a pain, after a little searching I came across this Tech Net article for Windows XP.</summary></entry></feed>